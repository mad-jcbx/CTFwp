# -*- coding:utf8 -*-
from Crypto.Util.number import *
import gmpy2
import os
import random
import libnum

f=open('EIS2019rsa.enc','rb').read().split("\n")
n=int(f[1])
c=int(f[0])# p=a*10**200+b   q=b*10*200+a 
N=str(n)
N1=N[:200]
N2=N[-200:]
ab=str(int(N1)-1)+N2
ab1=str(int(N[:400])-int(ab))+str(n-int(ab))[400:]
print n
print int(ab1)/(10**200)#a^2+b^2
print ab
a = 26284188956566787061488395375038990922315226573136209037057271138009190100783239284290331572584174262962398525057079432276956326316964537561436371572902729190352463910337199538520792220209028051162087
b = 80554375634577518615438386695008921410006481979463250396364716867580983517518170157390631558754951379984609818401525153158058049179857450828511300732679873231618529488409644674348216778296766615218923
p=a*10**200+b
q=b*10**200+a
e=65537
d=gmpy2.invert(e,(p-1)*(q-1))
print libnum.n2s(pow(c,d,n))


