# -*- coding:utf8 -*-
#pollard rho Algorithm
import gmpy2
import os
import time
import random
def mapx(x):
    x=(pow(x,n-1,n)+3)%n#x=(pow(x,2,n)+1)%n#
    return x

def pollard(x1,x2):
    while True:
        x1=mapx(x1)
        x2=mapx(mapx(x2))
        p=gmpy2.gcd((x1-x2)%n,n)
        if p>1:
            print p
            break          
def newpollard(x1,x2):
    while True:
        i=1
        z=1
        while i<=100:
            x1=mapx(x1)
            x2=mapx(mapx(x2))
            i=i+1
            z=((x2-x1)*z)%n
        p=gmpy2.gcd(z,n)
        if p==n :
            return p
        elif p>1:
            return p
#n=26221250500210405881132117557481723828766403943957950577451874805030106596081117375156772427206128405044267565826746522083073344532158814742511219204087934469113726393167485385378981630858737362324790588554286527642921364757519448451820127769942271309179542598449740660811048250973469013409521371791098074887056492924891157941526458248272889917641905464741404650030958545690892412495947165576458308474382558997629624440993069542093798549029729504677699266868041518498869029774178904303543559872895807099482683032802362220977267523960685985521766229201489330046455426324265875811125282379015211742752299449996253305521
#n=2080411295479626658883057333894077463276268622700851405159952374699116645166129197321575322242479469021412307989384091812972651793091399523883889080849144323163329102586231419893063566218774538237206110394740559036878626947596929321789585556548062481873998432902418629256747843317627938310440888442022216235119593362381240995859758912800242909253186031157075151337463557525998809435092653648706978570715170548190158337596833033144588839251484478878458767204163188894089934431677158123000702445473626961278547823349937
n=15518961041625074876182404585394098781487141059285455927024321276783831122168745076359780343078011216480587575072479784829258678691739
def main():
    print'start to calculate...'
    start=time.time()
    print newpollard(3,3)
    end=time.time()
    print'Finish in {} seconds'.format(end-start)

    
if __name__ =='__main__':
    main()
        #随便找了两个400位的因子都分解半天没分解出来，那这个n=2052位用这个pollard更加分解不出来了。。
'''
    answer:
    p=189749484366449861630736482622030204229600074936733397229668738586605895979811823994029500725448581332746860468289540041125768726148614579255062994177531727784605194094836998282676712435286273497842956368997116036170165393912022560935791934662695453870846024312915604049805219410140420469163797779129644454583   
    p 1028
    q=177993461816075408240866752227210319316825574291000376727523991315086097605063837563342286560819823849610146713383370383386260295565108973920944593141677024612114517119831676665456754235233172344362610684938542774386956894066675103840244633202469661725050948177995671009070311486253646420435061175078660441183
    q 1024
'''#cao ,换了一个函数才对，md