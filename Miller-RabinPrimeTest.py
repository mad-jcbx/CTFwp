# -*- coding:utf8 -*-
from Crypto.Util.number import *
import gmpy2
import os
import libnum
import random
import signal
import time
flag=0
n=pow(8151728061*2,125987)-1
#n=33774167600199691072470424898842928168570559940362770786060699320989546851695106466924163816843729828399984649770900793014896037884774039660562546937090412844276185560384964983508291174867808082182386566813393157054259464108858158903739578119760394228341564696225513954400995543629624209942565369972555679980359992955514826589781286738100616149226885302403505062415492679633217275379153421830105021673417544608398249866398042786421630495968810854036782025120509999022773806069591080190166920079688217334968528641747739241234353918892029263544388161160427668518991666960251381106788899451912317001247537576428186291689
#n=17#gmpy2.next_prime(random.randint(2,100000))
print("n=%s"%(n))
list=[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 
  31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 
  73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 
  127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 
  179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 
  233, 239, 241, 251, 257, 263, 269, 271, 277, 281] 
list1=[2,3,5,7,11,31,61,73,331]
for a in list:
    if a>=n:
        continue
    t=n-1
    if n%2==0:
        flag=1
        print("break,it's a composite number")
        break
    print("Trying... a=%s"%(a))
    while t%2==0:
        t=t/2
        print("t=%s"%(t))
        ans=pow(a,t,n)
        if ans==1:
            print("ans=1,continue")
        elif ans==n-1:
            print("break,ans=-1,may be a prime")
            break
        else:
            flag=1
            print("berak,ans=%s,it's a Composite number"%(ans))
            break
    if flag==1:
        break
    print('\n')
    
if flag==0 and gmpy2.is_prime(n):
    print("Congratulation! prime n=%s"%(n))
