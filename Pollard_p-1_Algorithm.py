# -*- coding:utf8 -*-
import gmpy2
import os
import libnum
import random
from Crypto.Util.number import *
#N=33774167600199691072470424898842928168570559940362770786060699320989546851695106466924163816843729828399984649770900793014896037884774039660562546937090412844276185560384964983508291174867808082182386566813393157054259464108858158903739578119760394228341564696225513954400995543629624209942565369972555679980359992955514826589781286738100616149226885302403505062415492679633217275379153421830105021673417544608398249866398042786421630495968810854036782025120509999022773806069591080190166920079688217334968528641747739241234353918892029263544388161160427668518991666960251381106788899451912317001247537576428186291689
N=833810193564967701912362955539789451139872863794534923259743419423089229206473091408403560311191545764221310666338878019
def Pollard_p_1():
    b=2
    n=3
    L=pow(2,n,N)
    while n<10000:
        n+=1            
        L=(pow(L,n,N))
    print n,L
    while True:  
        n+=1            
        L=(pow(L,n,N))%N
        p=gmpy2.gcd(L-1,N)
        if p>1:
            return p
        if n%10000==0:
            print n      
def main():
    Pollard_p_1()
if __name__ =='__main__':           
    main()        